const players = [
    { id: 1, x: 4, y: 5, width: 30, height: 30, color: "blue", speed: 5, bulletSpeed: 10, bullets: [] },
    { id: 0, x: 695, y: 465, width: 30, height: 30, color: "red", speed: 5, bulletSpeed: 10, bullets: [] },
];

function saveToFirebase(player) {
    return new Promise((resolve, reject) => {
        var playerRef = database.ref("players/" + player.id);

        playerRef.set({ x: player.x, y: player.y }, (error) => {
            if (error) {
                reject(error);
            } else {
                resolve(`Player ${player.id} data saved to Firebase successfully!`);
            }
        });
    });
}

function save() {
    const savePromises = players.map(player => saveToFirebase(player));
    Promise.all(savePromises)
        .then(results => {
            console.log(results.join('\n'));
        })
        .catch(error => {
            console.error("Error saving player data:", error);
        });
}

function get(playerId, callback) {
    var playerRef = database.ref("players/" + playerId);

    playerRef.on("value", function (snapshot) {
        var playerData = snapshot.val();
        console.log(`Player ${playerId}'s coordinates:`, playerData.x, playerData.y);

        if (typeof callback === "function") {
            callback(playerData);
        }
    });
}

// Call the get function for both players
get(1, movePlayer1); // Call movePlayer1 for Player 1 (ID: 1)
get(0, movePlayer2); // Call movePlayer2 for Player 2 (ID: 0)

function movePlayer1(player2Data) {
    // Player 1 controls (Arrow keys and Space bar)
    document.addEventListener("keydown", function (event) {
        let positionChanged = false;
        const player = players.find(p => p.id === 1); // Find Player 1 in the array

        if (player) {
            if (event.key === "ArrowUp" && player.y > 0) {
                player.y -= player.speed;
                positionChanged = true;
            } else if (event.key === "ArrowDown" && player.y < canvas.height - player.height) {
                player.y += player.speed;
                positionChanged = true;
            } else if (event.key === "ArrowLeft" && player.x > 0) {
                player.x -= player.speed;
                positionChanged = true;
            } else if (event.key === "ArrowRight" && player.x < canvas.width - player.width) {
                player.x += player.speed;
                positionChanged = true;
            } else if (event.key === " " && gameActive) {
                // Space bar to shoot for Player 1
                player.bullets.push({ x: player.x + player.width, y: player.y + player.height / 2, direction: 1 });
            }

            console.clear();
            console.log(`Player 1 position: x=${player.x}, y=${player.y}`);

            if (positionChanged) {
                save();
            }
        }
    });
}

function movePlayer2(player1Data) {
    // Player 2 is on the same PC, so you can disable controls for Player 2 on this PC
    // Your movePlayer2 logic goes here for Player 2
    console.log("Player 2's coordinates updated:", player1Data.x, player1Data.y);
}
